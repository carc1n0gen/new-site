1:HL["/_next/static/css/85bbee2c9f2b6774.css",{"as":"style"}]
0:["JJQ4bbWLumAQHqwzmio5L",[[["",{"children":[["year","2020","d"],{"children":[["month","08","d"],{"children":[["day","08","d"],{"children":[["slug","bootstrap-modals-without-jquery","d"],{"children":["__PAGE__?{\"year\":\"2020\",\"month\":\"08\",\"day\":\"08\",\"slug\":\"bootstrap-modals-without-jquery\"}",{}]}]}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/85bbee2c9f2b6774.css","precedence":"next"}]],["$L3",null]]]]]
4:I{"id":7095,"chunks":["95:static/chunks/95-b42e21927908bec6.js","224:static/chunks/224-45995354792692c9.js","106:static/chunks/app/[year]/[month]/[day]/[slug]/page-fd3e7a5daa90e646.js"],"name":"","async":false}
5:I{"id":7289,"chunks":["95:static/chunks/95-b42e21927908bec6.js","185:static/chunks/app/layout-4b5d31f46ee0d4d2.js"],"name":"","async":false}
6:I{"id":9180,"chunks":["272:static/chunks/webpack-8011ad2688e54c70.js","253:static/chunks/bce60fc1-3d7875a7a6202410.js","698:static/chunks/698-4595f783858dddc6.js"],"name":"default","async":false}
7:I{"id":2306,"chunks":["272:static/chunks/webpack-8011ad2688e54c70.js","253:static/chunks/bce60fc1-3d7875a7a6202410.js","698:static/chunks/698-4595f783858dddc6.js"],"name":"default","async":false}
2:[["$","html",null,{"lang":"en","className":"dark:bg-black md:bg-zinc-50 md:dark:bg-zinc-800","children":["$","body",null,{"className":"text-zinc-700 dark:text-zinc-300","children":[["$","header",null,{"className":"bg-white dark:bg-black text-center md:text-left mt-5 md:mt-0 md:pt-10 border-b border-b-zinc-300 dark:border-b-zinc-600","children":[["$","div",null,{"className":"md:max-w-screen-md px-2 md:px-0 mx-auto","children":[["$","img",null,{"src":"/img/avatar-new.jpg","alt":"Avatar photo","className":"rounded-full mx-auto md:float-right md:-mt-4","width":"100","height":"100"}],["$","div",null,{"className":"mt-5","children":[["$","$L4",null,{"href":"/","className":"mt-2","children":["$","h1",null,{"className":"text-5xl font-bold","children":"Carson's Blog"}]}],["$","p",null,{"className":"mt-2","children":"Somewhat coherent tutorials about web stuff and things."}]]}]]}],["$","$L5",null,{}]]}],["$","main",null,{"className":"px-4 py-2 md:p-0 md:max-w-screen-md mx-auto","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":["$","section",null,{"className":"mt-6 p-6 bg-white border border-zinc-300","children":[["$","h1",null,{"className":"font-bold text-3xl mb-4","children":"Not Found"}],["$","p",null,{"children":"Are you lost? There doesn't seem to be anything here"}]]}],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children",["year","2020","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children",["year","2020","d"],"children",["month","08","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children",["year","2020","d"],"children",["month","08","d"],"children",["day","08","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children",["year","2020","d"],"children",["month","08","d"],"children",["day","08","d"],"children",["slug","bootstrap-modals-without-jquery","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8",null],"segment":"__PAGE__?{\"year\":\"2020\",\"month\":\"08\",\"day\":\"08\",\"slug\":\"bootstrap-modals-without-jquery\"}"},"styles":[]}],"segment":["slug","bootstrap-modals-without-jquery","d"]},"styles":[]}],"segment":["day","08","d"]},"styles":[]}],"segment":["month","08","d"]},"styles":[]}],"segment":["year","2020","d"]},"styles":[]}]}],["$","footer",null,{"className":"mt-6 mb-6 text-center","children":"Â© Carson Evans"}]]}]}],null]
3:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Bootstrap Modals Without jQuery - Carson's Blog"}],["$","meta","2",{"name":"description","content":"In this post I'll be showing how you can pretty easily write your own vanilla JavaScript to replace jQuery when using bootstrap modals."}],["$","meta","3",{"name":"keywords","content":"bootstrap modal without jquery"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","5",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]]
f:I{"id":4368,"chunks":["95:static/chunks/95-b42e21927908bec6.js","224:static/chunks/224-45995354792692c9.js","106:static/chunks/app/[year]/[month]/[day]/[slug]/page-fd3e7a5daa90e646.js"],"name":"","async":false}
9:T424,<span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">link</span>
      <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>
      <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css&quot;</span>
      <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z&quot;</span>
      <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>
    /&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>a:T11d3,<span class="hljs-tag">&lt;<span class="hljs-name">button</span>
  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span>
  <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>
  <span class="hljs-attr">data-toggle</span>=<span class="hljs-string">&quot;modal&quot;</span>
  <span class="hljs-attr">data-target</span>=<span class="hljs-string">&quot;#exampleModal&quot;</span>
&gt;</span>
  Launch demo modal
<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>

<span class="hljs-comment">&lt;!-- Modal --&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span>
  <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal fade&quot;</span>
  <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;exampleModal&quot;</span>
  <span class="hljs-attr">tabindex</span>=<span class="hljs-string">&quot;-1&quot;</span>
  <span class="hljs-attr">aria-labelledby</span>=<span class="hljs-string">&quot;exampleModalLabel&quot;</span>
  <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>
&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-dialog&quot;</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-content&quot;</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-header&quot;</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">h5</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-title&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;exampleModalLabel&quot;</span>&gt;</span>Modal title<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">button</span>
          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span>
          <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;close&quot;</span>
          <span class="hljs-attr">data-dismiss</span>=<span class="hljs-string">&quot;modal&quot;</span>
          <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Close&quot;</span>
        &gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-symbol">&amp;times;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-body&quot;</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-footer&quot;</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-secondary&quot;</span> <span class="hljs-attr">data-dismiss</span>=<span class="hljs-string">&quot;modal&quot;</span>&gt;</span>
          Close
        <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>Save changes<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>b:T1899,<span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">link</span>
      <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>
      <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css&quot;</span>
      <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z&quot;</span>
      <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>
    /&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-open&quot;</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>
      <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span>
      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>
      <span class="hljs-attr">data-toggle</span>=<span class="hljs-string">&quot;modal&quot;</span>
      <span class="hljs-attr">data-target</span>=<span class="hljs-string">&quot;#exampleModal&quot;</span>
    &gt;</span>
      Launch demo modal
    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>

    <span class="hljs-comment">&lt;!-- Modal --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>
      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal fade show&quot;</span>
      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;exampleModal&quot;</span>
      <span class="hljs-attr">tabindex</span>=<span class="hljs-string">&quot;-1&quot;</span>
      <span class="hljs-attr">aria-labelledby</span>=<span class="hljs-string">&quot;exampleModalLabel&quot;</span>
      <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>
      <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: block;&quot;</span>
    &gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-dialog&quot;</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-content&quot;</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-header&quot;</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">h5</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-title&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;exampleModalLabel&quot;</span>&gt;</span>Modal title<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">button</span>
              <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span>
              <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;close&quot;</span>
              <span class="hljs-attr">data-dismiss</span>=<span class="hljs-string">&quot;modal&quot;</span>
              <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Close&quot;</span>
            &gt;</span>
              <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-symbol">&amp;times;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
            <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-body&quot;</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-footer&quot;</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">button</span>
              <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span>
              <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-secondary&quot;</span>
              <span class="hljs-attr">data-dismiss</span>=<span class="hljs-string">&quot;modal&quot;</span>
            &gt;</span>
              Close
            <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>Save changes<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-backdrop fade show&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>c:T1423,<span class="hljs-keyword">function</span> <span class="hljs-title function_">closeModal</span>(<span class="hljs-params">modal</span>) {
  <span class="hljs-comment">//</span>
}

<span class="hljs-keyword">function</span> <span class="hljs-title function_">openModal</span>(<span class="hljs-params">modal</span>) {
  <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Open the modal!&quot;</span>);
}

<span class="hljs-comment">// This is similar to $(document).ready(...) but in plain JavaScript</span>
<span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;load&quot;</span>, <span class="hljs-function">() =&gt;</span> {
  <span class="hljs-comment">// In bootstrap, buttons (or whatever element) that open a modal will have the</span>
  <span class="hljs-comment">// attribute data-toggle=&quot;modal&quot; on them.  So we want to select all elements with</span>
  <span class="hljs-comment">// this attribute and add a click handler to them.</span>
  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;[data-toggle=modal]&quot;</span>).<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">element</span>) =&gt;</span> {
    element.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-function">() =&gt;</span> {
      <span class="hljs-comment">// In bootstrap, elements that open modals will have a `data-target` attribute</span>
      <span class="hljs-comment">// which points to the modal that element should open. The `dataset` is how you</span>
      <span class="hljs-comment">// access data attributes in JavaScript. For example if the data attribute was</span>
      <span class="hljs-comment">// called `data-foo` you would use `element.dataset.foo` to get the value.</span>
      <span class="hljs-keyword">const</span> target = element.<span class="hljs-property">dataset</span>.<span class="hljs-property">target</span>;
      <span class="hljs-keyword">const</span> modal = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(target);
      <span class="hljs-comment">// If the target modal is found, let&#x27;s open it.</span>
      <span class="hljs-keyword">if</span> (modal) {
        <span class="hljs-title function_">openModal</span>(modal);
      }
    });
  });

  <span class="hljs-comment">// In bootstrap, buttons (or whatever element) that close modals have the</span>
  <span class="hljs-comment">// attribute data-dismiss=&quot;modal&quot; on them.  So want want to select all elements with</span>
  <span class="hljs-comment">// this attribute and add aclick handler to them.</span>
  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;[data-dismiss=modal]&quot;</span>).<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">element</span>) =&gt;</span> {
    element.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-function">() =&gt;</span> {
      <span class="hljs-comment">// Get the current open modal (the modal with the `show` class).</span>
      <span class="hljs-keyword">const</span> modal = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.modal.show&quot;</span>);
      <span class="hljs-comment">// If an open modal is found, close it.</span>
      <span class="hljs-keyword">if</span> (modal) {
        <span class="hljs-title function_">closeModal</span>(modal);
      }
    });
  });

  <span class="hljs-comment">// We also want the modal to close if the area out side the modal dialog is clicked.</span>
  <span class="hljs-comment">// So we can attach a click handler to the .modal element</span>
  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;.modal&quot;</span>).<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">modal</span>) =&gt;</span> {
    modal.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> {
      <span class="hljs-comment">// We have to check that the element that was clicked is actually the .modal element,</span>
      <span class="hljs-comment">// because this event will fire when children of the .modal element are clicked too (like the modal dialog).</span>
      <span class="hljs-keyword">if</span> (event.<span class="hljs-property">target</span> === modal) {
        <span class="hljs-title function_">closeModal</span>(modal);
      }
    });
  });
});d:Tfac,<span class="hljs-keyword">function</span> <span class="hljs-title function_">closeModal</span>(<span class="hljs-params">modal</span>) {
  <span class="hljs-comment">// Get the backdrop so we can remove it from the body</span>
  <span class="hljs-keyword">const</span> backdrop = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.modal-backdrop.fade.show&quot;</span>);
  <span class="hljs-comment">// Remove the `modal-open` class from the body</span>
  <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&quot;modal-open&quot;</span>);
  <span class="hljs-comment">// Re-hide the modal from screen readers</span>
  modal.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;aria-hidden&quot;</span>, <span class="hljs-string">&quot;true&quot;</span>);
  <span class="hljs-comment">// Remove the `show` class from the backdrop</span>
  backdrop.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&quot;show&quot;</span>);
  <span class="hljs-comment">// Remove the `show` class from the modal</span>
  modal.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&quot;show&quot;</span>);
  <span class="hljs-comment">// Change the modal `display` style to `none`</span>
  modal.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&quot;none&quot;</span>;
  <span class="hljs-comment">// Remove the backdrop div from the body</span>
  backdrop.<span class="hljs-title function_">remove</span>();
}

<span class="hljs-keyword">function</span> <span class="hljs-title function_">openModal</span>(<span class="hljs-params">modal</span>) {
  <span class="hljs-comment">// Create the backdrop div element</span>
  <span class="hljs-keyword">const</span> backdrop = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>);
  <span class="hljs-comment">// Add the required classes to it.</span>
  backdrop.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;modal-backdrop&quot;</span>, <span class="hljs-string">&quot;fade&quot;</span>, <span class="hljs-string">&quot;show&quot;</span>);
  <span class="hljs-comment">// Add the `modal-open` class to the body</span>
  <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;modal-open&quot;</span>);
  <span class="hljs-comment">// Append the backdrop div to the body</span>
  <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(backdrop);
  <span class="hljs-comment">// Set the `display` style of the modal to `block`</span>
  modal.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&quot;block&quot;</span>;
  <span class="hljs-comment">// This is for accessibility tools.  We want to make it no longer hidden to screen readers.</span>
  modal.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;aria-hidden&quot;</span>, <span class="hljs-string">&quot;false&quot;</span>, <span class="hljs-string">&quot;show&quot;</span>);
  <span class="hljs-comment">// Add the show class to the modal</span>
  modal.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;show&quot;</span>);
}e:T1118,<span class="hljs-keyword">function</span> <span class="hljs-title function_">closeModal</span>(<span class="hljs-params">modal</span>) {
  <span class="hljs-keyword">const</span> backdrop = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.modal-backdrop.fade.show&quot;</span>);
  modal.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;aria-hidden&quot;</span>, <span class="hljs-string">&quot;true&quot;</span>);
  backdrop.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&quot;show&quot;</span>);
  <span class="hljs-comment">// We want to remove the show class from the modal outside of the regular DOM thread so that</span>
  <span class="hljs-comment">// transitions can take effect</span>
  <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {
    modal.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&quot;show&quot;</span>);
  });

  <span class="hljs-comment">// We want to set the display style back to none and remove the backdrop div from the body</span>
  <span class="hljs-comment">// with a delay of 500ms in order to give their transition/animations time to complete</span>
  <span class="hljs-comment">// before totally hiding and removing them.</span>
  <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {
    modal.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&quot;none&quot;</span>;
    backdrop.<span class="hljs-title function_">remove</span>();
  }, <span class="hljs-number">500</span>); <span class="hljs-comment">// this time we specified a delay</span>
}

<span class="hljs-keyword">function</span> <span class="hljs-title function_">openModal</span>(<span class="hljs-params">modal</span>) {
  <span class="hljs-keyword">const</span> backdrop = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>);
  <span class="hljs-comment">// Remove the show from the initial classList, we will add it in the timeout</span>
  <span class="hljs-comment">//</span>
  <span class="hljs-comment">// backdrop.classList.add(&#x27;modal-backdrop&#x27;, &#x27;fade&#x27;, &#x27;show&#x27;);</span>
  backdrop.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;modal-backdrop&quot;</span>, <span class="hljs-string">&quot;fade&quot;</span>);
  <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;modal-open&quot;</span>);
  <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(backdrop);
  modal.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&quot;block&quot;</span>;
  modal.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;aria-hidden&quot;</span>, <span class="hljs-string">&quot;false&quot;</span>, <span class="hljs-string">&quot;show&quot;</span>);

  <span class="hljs-comment">// We don&#x27;t need to specify the milliseconds in this timeout, since we don&#x27;t want a delay,</span>
  <span class="hljs-comment">// we just want the changes to be done outside of the normal DOM thread.</span>
  <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {
    <span class="hljs-comment">// Move adding the show class to inside this setTimeout</span>
    modal.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;show&quot;</span>);
    <span class="hljs-comment">// Add the show class to the backdrop in this setTimeout</span>
    backdrop.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&quot;show&quot;</span>);
  });
}8:["$","article",null,{"className":"mt-6 md:p-6 bg-white dark:bg-black md:border border-zinc-300 dark:border-zinc-600","children":[["$","header",null,{"children":[["$","$L4",null,{"href":"/2020/08/08/bootstrap-modals-without-jquery","children":["$","h2",null,{"className":"text-3xl font-bold mb-2","children":"Bootstrap Modals Without jQuery"}]}],["$","p",null,{"className":"mb-4 text-sm text-zinc-500","children":["posted by ","Carson Evans"," Â·"," ","Aug 8, 2020"]}]]}],["$","section",null,{"children":["In this post I'll be showing how you can pretty easily write your own vanilla JavaScript to replace jQuery when using bootstrap modals.","\n",["$","h2",null,{"className":"text-2xl font-bold mt-6 mb-2","children":"Preparation"}],"\n",["$","p",null,{"className":"my-4","children":"First things first, let's get a super basic template ready with the bootstrap styles for us to work with."}],"\n",["$","pre",null,{"className":"my-4 -mx-4 md:-mx-[25px]","children":["$","code",null,{"className":"hljs","dangerouslySetInnerHTML":{"__html":"$9"}}]}],"\n",["$","p",null,{"className":"my-4","children":"Now let's grab one of the demos out of the bootstrap examples, and we'll use that to mess around with. Put this in the body."}],"\n",["$","pre",null,{"className":"my-4 -mx-4 md:-mx-[25px]","children":["$","code",null,{"className":"hljs","dangerouslySetInnerHTML":{"__html":"$a"}}]}],"\n",["$","p",null,{"className":"my-4","children":"Now if you try to load this up in a browser right now, all you will see is the button. We need make it so when we click the button, we toggle the necessary states/classes on the modal to make it show. First let's find out what those classes we need to toggle are."}],"\n",["$","h2",null,{"className":"text-2xl font-bold mt-6 mb-2","children":"Showing The Modal"}],"\n",["$","p",null,{"className":"my-4","children":["We can simply open up the ",["$","a",null,{"href":"https://getbootstrap.com/docs/4.5/components/modal/#live-demo","className":"font-bold underline","children":"demo we copied this sample code from the bootstrap docs"}],", open up our browser inspector tools, and watch what changes when we click the button and close the modal."]}],"\n",["$","p",null,{"className":"my-4","children":["So the first thing we notice is that the root modal div changes from ",["$","code",null,{"className":"font-bold","children":"class=\"modal fade\""}]," to ",["$","code",null,{"className":"font-bold","children":"class=\"modal fade show\""}],", and the inline style changes to ",["$","code",null,{"className":"font-bold","children":"style=\"display: block;\""}],"."]}],"\n",["$","video",null,{"controls":true,"children":["$","source",null,{"src":"/post-assets/bootstrap-modals-without-jquery/1.mp4","type":"video/mp4"}]}],"\n",["$","p",null,{"className":"my-4","children":["But this isn't actually enough, turns out ",["$","code",null,{"className":"font-bold","children":"class=\"modal-open\""}]," is also added the body"]}],"\n",["$","video",null,{"controls":true,"children":["$","source",null,{"src":"/post-assets/bootstrap-modals-without-jquery/2.mp4","type":"video/mp4"}]}],"\n",["$","p",null,{"className":"my-4","children":"Finally the backdrop div is injected to the bottom of the body which gives the dark, partially transparent shadow behind the modal."}],"\n",["$","video",null,{"controls":true,"children":["$","source",null,{"src":"/post-assets/bootstrap-modals-without-jquery/3.mp4","type":"video/mp4"}]}],"\n",["$","p",null,{"className":"my-4","children":"So if we manually update our code to have these changes the modal will show."}],"\n",["$","pre",null,{"className":"my-4 -mx-4 md:-mx-[25px]","children":["$","code",null,{"className":"hljs","dangerouslySetInnerHTML":{"__html":"$b"}}]}],"\n",["$","p",null,{"className":"my-4","children":"But we don't always want the modal to show. So now let's undo those changes and start writing the JavaScript to handle the button click."}],"\n",["$","h2",null,{"className":"text-2xl font-bold mt-6 mb-2","children":"Plain Old JavaScript DOM Manipulation"}],"\n",["$","pre",null,{"className":"my-4 -mx-4 md:-mx-[25px]","children":["$","code",null,{"className":"hljs","dangerouslySetInnerHTML":{"__html":"$c"}}]}],"\n",["$","p",null,{"className":"my-4","children":["If we click the button, we'll now get an alert box showing. Now let's focus on the ",["$","code",null,{"className":"font-bold","children":"openModal"}]," and ",["$","code",null,{"className":"font-bold","children":"closeModal"}]," functions to actually open and close the modal."]}],"\n",["$","pre",null,{"className":"my-4 -mx-4 md:-mx-[25px]","children":["$","code",null,{"className":"hljs","dangerouslySetInnerHTML":{"__html":"$d"}}]}],"\n",["$","p",null,{"className":"my-4","children":["At this point the modal will show and hide. But we don't have the smooth animations/transitions. It just instantly shows and hides. This is because we need to change some of the classes/states asynchronously or outside of the regular DOM thread in order for the transitions to be able to take effect. We can use the ",["$","code",null,{"className":"font-bold","children":"setTimeout"}]," function in order to have this effect."]}],"\n",["$","pre",null,{"className":"my-4 -mx-4 md:-mx-[25px]","children":["$","code",null,{"className":"hljs","dangerouslySetInnerHTML":{"__html":"$e"}}]}],"\n",["$","h2",null,{"className":"text-2xl font-bold mt-6 mb-2","children":"It Works!"}],"\n",["$","p",null,{"className":"my-4","children":"Now when you show and hide the modal, you'll see we now have the exact same transitions/animations that bootstrap modals normally have, but with no jQuery!"}],"\n",["$","p",null,{"className":"my-4","children":"Now obviously there are plenty of other bootstrap components that also depend on jQuery. Hopefully this post gives you an idea on how you can use plain JavaScript to handle those without jQuery too. Maybe I will write about some of the other components in the future also."}],"\n",["$","p",null,{"className":"my-4","children":[["$","del",null,{"children":["NOTE: I was unable to figure out how to make it so when you click the backdrop it closes the modal. If I figure it out, I will update the post. Or if anyone reading this has an idea, feel free to comment below, or reach out to me on my ",["$","a",null,{"href":"/contact","className":"font-bold underline","children":"contact form"}],"."]}]," I've updated the snippets, and the linked example app to close the modal when you click the area outside the modal dialog."]}],"\n",["$","p",null,{"className":"my-4","children":["If you wish to reference a complete fully working demo of all of this instead of the broken up chunks in this post, I have one ",["$","a",null,{"href":"https://github.com/carc1n0gen/tutorial-apps/tree/master/bootstrap-modal-without-jquery","className":"font-bold underline","children":"here on my GitHub"}],". I also have a ",["$","a",null,{"href":"/post-assets/bootstrap-modals-without-jquery/demo.html","className":"font-bold underline","children":"live demo"}],"."]}]]}],["$","footer",null,{"className":"mt-6","children":["$","$Lf",null,{"title":"Bootstrap Modals Without jQuery","postUrl":"/2020/08/08/bootstrap-modals-without-jquery"}]}]]}]
